{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\React Tutorial\\\\Notebook\\\\client\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport noteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:3000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  //Getting all the notes\n  const getNotes = async () => {\n    let url = `${host}/notes/fetchnotes`;\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    setNotes(data);\n  };\n\n  //Adding a note\n  const addNote = async (title, description, tag) => {\n    let url = `${host}/notes/addnote`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = {\n      _id: \"764bf9b1b1c3f86231a9a32dbd\",\n      user: \"64ad5148c6e014de4e4f6768\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2023-07-25T09:51:23.917Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  //Deleteing a note\n  const deleteNote = id => {\n    let newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  //Editing a note\n  const editNote = async (id, title, description, tag) => {\n    let url = `${host}/notes/updatenote/${id}`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","url","response","fetch","method","headers","data","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","_id","user","date","__v","concat","deleteNote","id","newNotes","filter","editNote","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/React Tutorial/Notebook/client/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport noteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:3000\";\r\n  const notesInitial = []\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n\r\n  //Getting all the notes\r\n  const getNotes = async() => {\r\n    let url = `${host}/notes/fetchnotes`;\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\",\r\n      }\r\n    \r\n    });\r\n\r\n    const data = await response.json()\r\n    console.log(data)\r\n    setNotes(data)\r\n  }\r\n\r\n\r\n  //Adding a note\r\n  const addNote = async (title, description, tag) => {\r\n    let url = `${host}/notes/addnote`;\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\",\r\n      },\r\n      body: JSON.stringify({title, description, tag}),\r\n    });\r\n\r\n    const note = {\r\n      _id: \"764bf9b1b1c3f86231a9a32dbd\",\r\n      user: \"64ad5148c6e014de4e4f6768\",\r\n      title: title,\r\n      description: description,\r\n      tag: tag,\r\n      date: \"2023-07-25T09:51:23.917Z\",\r\n      __v: 0,\r\n    };\r\n\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  //Deleteing a note\r\n  const deleteNote = (id) => {\r\n    let newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  //Editing a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    let url = `${host}/notes/updatenote/${id}`;\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhZDUxNDhjNmUwMTRkZTRlNGY2NzY4In0sImlhdCI6MTY4OTE2MTQxN30.oX-YZDH7wQVOMp8u385EQTohC5sascs5F56AeX6-C1w\",\r\n      },\r\n      body: JSON.stringify({title, description, tag}),\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <noteContext.Provider\r\n      value={{ notes, setNotes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}